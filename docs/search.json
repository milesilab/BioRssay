[{"path":"https://milesilab.github.io/BioRssay/index.html/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU Affero General Public License","title":"GNU Affero General Public License","text":"Version 3, 19 November 2007 Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU Affero General Public License","text":"GNU Affero General Public License free, copyleft license software kinds works, specifically designed ensure cooperation community case network server software. licenses software practical works designed take away freedom share change works. contrast, General Public Licenses intended guarantee freedom share change versions program–make sure remains free software users. speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. Developers use General Public Licenses protect rights two steps: (1) assert copyright software, (2) offer License gives legal permission copy, distribute /modify software. secondary benefit defending users’ freedom improvements made alternate versions program, receive widespread use, become available developers incorporate. Many developers free software heartened encouraged resulting cooperation. However, case software used network servers, result may fail come . GNU General Public License permits making modified version letting public access server without ever releasing source code public. GNU Affero General Public License designed specifically ensure , cases, modified source code becomes available community. requires operator network server provide source code modified version running users server. Therefore, public use modified version, publicly accessible server, gives public access source code modified version. older license, called Affero General Public License published Affero, designed accomplish similar goals. different license, version Affero GPL, Affero released new version Affero GPL permits relicensing license. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://milesilab.github.io/BioRssay/index.html/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions.","title":"GNU Affero General Public License","text":"“License” refers version 3 GNU Affero General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code.","title":"GNU Affero General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions.","title":"GNU Affero General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law.","title":"GNU Affero General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies.","title":"GNU Affero General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions.","title":"GNU Affero General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: work must carry prominent notices stating modified , giving relevant date. work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms.","title":"GNU Affero General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms.","title":"GNU Affero General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: Disclaiming warranty limiting liability differently terms sections 15 16 License; Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; Limiting use publicity purposes names licensors authors material; Declining grant rights trademark law use trade names, trademarks, service marks; Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination.","title":"GNU Affero General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies.","title":"GNU Affero General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients.","title":"GNU Affero General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents.","title":"GNU Affero General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom.","title":"GNU Affero General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/LICENSE.html","id":"13-remote-network-interaction-use-with-the-gnu-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Remote Network Interaction; Use with the GNU General Public License.","title":"GNU Affero General Public License","text":"Notwithstanding provision License, modify Program, modified version must prominently offer users interacting remotely computer network (version supports interaction) opportunity receive Corresponding Source version providing access Corresponding Source network server charge, standard customary means facilitating copying software. Corresponding Source shall include Corresponding Source work covered version 3 GNU General Public License incorporated pursuant following paragraph. Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU General Public License single combined work, convey resulting work. terms License continue apply part covered work, work combined remain governed version 3 GNU General Public License.","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License.","title":"GNU Affero General Public License","text":"Free Software Foundation may publish revised /new versions GNU Affero General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU Affero General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU Affero General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU Affero General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty.","title":"GNU Affero General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability.","title":"GNU Affero General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16.","title":"GNU Affero General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU Affero General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. software can interact users remotely computer network, also make sure provides way users get source. example, program web application, interface display “Source” link leads users archive code. many ways offer source, different solutions better different programs; see section 13 specific requirements. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU AGPL, see https://www.gnu.org/licenses/.","code":"<one line to give the program's name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU Affero General Public License as     published by the Free Software Foundation, either version 3 of the     License, or (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU Affero General Public License for more details.      You should have received a copy of the GNU Affero General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>."},{"path":"https://milesilab.github.io/BioRssay/index.html/articles/BioRssay.html","id":"an-r-package-for-analyses-of-bioassays-and-probit-graphs","dir":"Articles","previous_headings":"","what":"An R package for analyses of bioassays and probit graphs","title":"BioRssay","text":"Piyal Karunarathne, Nicolas Pocquet, Pascal Milesi, Pierrick Labbé package designed analyze mortality data bioassays one several strains/lines/populations. now, functions package allow adjusting mortality controls Abott’s correction. strain, functions available generate mortality-dose regression using generalized linear model (takes -dispersion account allow mortality 0 1), plot regressions without desired confidence interval (e.g. 95%). package also provides functions test linearity log-dose response using chi-square test model predictions observed data (significant deviations linearity may reflect mixed populations example). package also allows determining lethal doses 25%, 50% 95% population (LD25, LD50 LD95 respectively) level specified user, 95% confidence intervals (CI) variance (e.g., LD25var, LD50var, etc.), following Johnson et al. 2013 approach, allows taking heterogeneity data account (Finney 1971) calculate CI (.e. larger heterogeneity increase CI). methods implemented use likelihood ratio tests (LRT) test differences resistance levels among different strains. Finally, resistance ratios (RR) LD25, LD50 LD95, .e. LD ratios given strain strain lowest LD50 (LD25,LD50, LD95; usually susceptible reference), 95% confidence intervals calculated according Robertson Preisler (1992). Installing BioRssay","code":"#1. CRAN version install.packages(\"BioRssay\") #2. Developmental version if (!requireNamespace(\"devtools\", quietly = TRUE))          install.packages(\"devtools\")      devtools::install_github(\"milesilab/BioRssay\", build_vignettes = TRUE)"},{"path":"https://milesilab.github.io/BioRssay/index.html/articles/BioRssay.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"1. DATA PREPARATION","title":"BioRssay","text":"BioRssay can import data format compatible base R data import functions (e.g. read.table, read.csv). However, functions BioRssay work, data must least following columns (columns won’t used, hindrance). strain: column containing strains tested dose: dosage tested strain/sample (controls entered 0) total: total number samples tested dead: number dead (knock ) samples See examples . Example 1 Also download test data https://github.com/milesilab/DATA/blob/main/BioAssays/Test.BioRssay.txt find example data sets https://github.com/milesilab/DATA/tree/main/BioAssays Example 2 NOTE: also possible include reference strain/population suffix “ref” strain column (see example 1), reference strain can specified later function resist.ratio obtain resistance ratios strain (see ).","code":"data(bioassay) head(bioassay$assay2) #>   insecticide  strain  dose total dead replicate     date #> 1    temephos KIS-ref 0.000   100    1         1 26/01/11 #> 2    temephos KIS-ref 0.002    97   47         1 26/01/11 #> 3    temephos KIS-ref 0.003    96   68         1 26/01/11 #> 4    temephos KIS-ref 0.004    98   89         1 26/01/11 #> 5    temephos KIS-ref 0.005    95   90         1 26/01/11 #> 6    temephos KIS-ref 0.007    99   97         1 26/01/11 file <- paste0(path.package(\"BioRssay\"), \"/Test.BioRssay.txt\") test<-read.table(file,header=TRUE) head(test) #>   insecticide strain dose total dead #> 1  bendiocarb Kisumu 0.00    25    0 #> 2  bendiocarb Kisumu 0.00    25    0 #> 3  bendiocarb Kisumu 0.00    25    0 #> 4  bendiocarb Kisumu 0.00    25    0 #> 5  bendiocarb Kisumu 0.01    25    0 #> 6  bendiocarb Kisumu 0.01    25    0"},{"path":"https://milesilab.github.io/BioRssay/index.html/articles/BioRssay.html","id":"analysis","dir":"Articles","previous_headings":"","what":"2. Analysis","title":"BioRssay","text":"workflow succinctly described , information functions options, see individual one reference index.","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/articles/BioRssay.html","id":"example-1","dir":"Articles","previous_headings":"","what":"Example 1","title":"BioRssay","text":"Let’s quick look data . example contains mortality data three strains (KIS-ref, DZOU, DZOU2 ); KIS used reference, indicated “ref” suffix. first step check whether controls non-negligible mortality, case correction applied data, probit transformation. easily achieved function probit.trans(). output probit.trans list first element (convrg) contains results Abott’s correction convergence values. However, since mortality controls (dose=0) 5% (conf=0.05) present example, data$convrg NULL thus correction applied data . second element list dataT probid transformed data two additional columns: mort, observed mortalities, probmort, observed probit-transformed mortalities. data frame ’ll use next steps analysis. set threshold conf=0.01 example 1, can assess effects Abbot’s correction: mortalities slightly reduced take base control mortality account. second step compute lethal dose values (25%, 50% 95%, LD25, LD50 LD95 respectively) corresponding resistance ratios. function resist.ratio allows just (user also option calculate values different LD values). reference strain specified data file (using suffix “ref” mentioned ), can specified ref.strain=. Otherwise, strain lowest LD50 considered . default, LDs’ 95% confidence intervals computed (min max values reported); can adjust using conf.level=. Note specify reference strain already labeled data strain, first LD25, LD50 LD95 upper lower limits (defaults 95% CI), slope intercept regression (standard error), heterogeneity (h) g factor (“almost good sets data, g substantially smaller 1.0 seldom greater 0.4.” Finney, 1971). result chi test (Chi(p)) indicated judge whether data follow linear regression: p-values 0.05 fits acceptable. Finally resistance ratios indicated LD25, LD50 LD95 (RR25, RR50 RR95), well upper lower limits. third step, analysing one strain, now test difference dose-mortality responses strains using model.signif() function. 3 strains, function first tests whether strains similar (.e. equivalent 1 strain) (.e. least one different others), using likelihood ratio test. , test highly significant, strains thus different terms dose response. Pairwise tests performed reported . , KIS strain different DZOU DZOU2 strains (model.pval <0.05). DZOU DZOU2 different (model.pval >0.05). bonferroni column indicates whether p-values <0.05 remain significant (sig vs non-sig) correction multiple testing. , function outputs seven columns statistical outputs model evaluation strains strain-dose null model. abbreviations follows:res.Dv - residual deviancethr - threshold significance pvaluestr - values strainsint - values interaction strain dose Note: pvalues strain strain-dose interaction F-test binomial model. Data Visualization data regression can plotted confidence levels using mort.plot() function. also possible take validity linearity test account plots using test.validity= option. probit-transformed mortalities (probit.trans() function) plotted function log10 doses.   also possible plot different confidence intervals conf.level= option (default 0.95). possible plot subset strains using strains= option list desired strains; provided, strains plotted. Note plots can generated directly “resist.ratio” function using plot=TRUE option.","code":"assays<-bioassay exm1<-assays$assay2 head(exm1) #>   insecticide  strain  dose total dead replicate     date #> 1    temephos KIS-ref 0.000   100    1         1 26/01/11 #> 2    temephos KIS-ref 0.002    97   47         1 26/01/11 #> 3    temephos KIS-ref 0.003    96   68         1 26/01/11 #> 4    temephos KIS-ref 0.004    98   89         1 26/01/11 #> 5    temephos KIS-ref 0.005    95   90         1 26/01/11 #> 6    temephos KIS-ref 0.007    99   97         1 26/01/11 unique(as.character(exm1$strain)) #> [1] \"KIS-ref\" \"DZOU\"    \"DZOU2\" dataT<-probit.trans(exm1) #additionally an acceptable threshold for controls' mortality can be set as desired with \"conf=\"; default is 0.05. dataT$convrg #> NULL head(dataT$tr.data) #>   insecticide  strain  dose total dead replicate     date      mort   probmort #> 2    temephos KIS-ref 0.002    97   47         1 26/01/11 0.4845361 -0.0387720 #> 3    temephos KIS-ref 0.003    96   68         1 26/01/11 0.7083333  0.5485223 #> 4    temephos KIS-ref 0.004    98   89         1 26/01/11 0.9081633  1.3295291 #> 5    temephos KIS-ref 0.005    95   90         1 26/01/11 0.9473684  1.6198563 #> 6    temephos KIS-ref 0.007    99   97         1 26/01/11 0.9797980  2.0495943 #> 7    temephos KIS-ref 0.010    99   99         1 26/01/11 0.9940000  2.5121443 data<-dataT$tr.data #probid transformed data RR<-resist.ratio(data) RR #>         Slope SlopeSE Intercept InterceptSE    h      g Chi2 df Chi(p)   LD25 #> DZOU     1.75  0.1537      3.72      0.3579 1.91 0.0397 9.88 10 0.4514 0.0030 #> DZOU2    1.69  0.1657      3.74      0.3907 2.33 0.0490 9.92 10 0.4473 0.0025 #> KIS-ref  3.17  0.3812      8.95      0.9849 3.26 0.0716 8.59 11 0.6597 0.0009 #>         LD25min LD25max   LD50 LD50min LD50max   LD95 LD95min LD95max rr25 #> DZOU      2e-04  0.0192 0.0074   6e-04  0.0404 0.0645  0.0087  0.2472 3.24 #> DZOU2     1e-04  0.0194 0.0062   3e-04  0.0412 0.0576  0.0055  0.2578 2.64 #> KIS-ref   0e+00  0.0142 0.0015   0e+00  0.0209 0.0050  0.0001  0.0537 1.00 #>         rr25min rr25max rr50 rr50min rr50max rr95 rr95min rr95max #> DZOU     2.7000    3.91 4.84  4.1600    5.64   13  7.6800   22.00 #> DZOU2    2.1900    3.18 4.05  3.5000    4.69   11  7.1100   19.00 #> KIS-ref  0.7947    1.26 1.00  0.8488    1.18    1  0.8085    1.24 model.signif(dataT$tr.data) #> Analysis of Deviance Table #>  #> Model 1: mortality ~ log10(data$dose) #> Model 2: mortality ~ log10(data$dose) * data$strain #>   Resid. Df Resid. Dev Df Deviance  Pr(>Chi)     #> 1        32     936.46                           #> 2        28      70.69  4   865.77 < 2.2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> complete model is significant against a NULL model  #>  continueing to pair-wise comparison #> Output details #>   model.pval - significance value of ANOVA on the binomial GLM test of the strain pair #>   bonferroni - significance of the model.pval with bonferroni correction #>   res.Dv - residual deviance #>   thr - threshold for the significance of the pvalue #>   str - values for the strains #>   int - values for the interaction between the strain and the dose #>  #> $model #>   strain1 strain2 model.pval bonferroni res.Dv.Null res.Dv.str res.Dv.int #> 1    DZOU   DZOU2    0.26402    non-sig          NA         NA         NA #> 2    DZOU KIS-ref          0        sig     1150.41     87.892     49.747 #> 3   DZOU2 KIS-ref          0        sig     1064.79     95.043     53.537 #>   str.pval str.thr int.pval int.thr #> 1       NA      NA       NA      NA #> 2        0 0.01250    0.001   0.025 #> 3        0 0.01667    0.001   0.050 strains<-levels(data$strain) par(mfrow=c(1,2)) # set plot rows # plot without confidence intervals and test of validity of the model mort.plot(data,plot.conf=FALSE,test.validity=FALSE)  # plot only the regression lines mort.plot(data,plot.conf=FALSE,test.validity=FALSE,pch=NA) # same plots with confidence level par(mfrow=c(1,2)) mort.plot(data,plot.conf=TRUE,test.validity=FALSE) mort.plot(data,plot.conf=TRUE,test.validity=FALSE,pch=NA)"},{"path":"https://milesilab.github.io/BioRssay/index.html/articles/BioRssay.html","id":"example-2","dir":"Articles","previous_headings":"","what":"Example 2","title":"BioRssay","text":"follow workflow (using plot option resist.ratio()). However, one insecticide tested experiment. Therefore, need subset data insecticide, carry analysis . use subset data insecticide “bendiocarb” .  Note enabled arguments “plot=” “plot.conf=” test.validity=. log-dose-response linear strain (Chi-square p-value < 0.05), plotted without forcing linearity “Acerkis AgRR5” strains example. Note least one strains failed linearity test, validity pairwise dose-mortality response test , best, highly questionable. recommend . many strains present one () fails linearity tests, recommend users remove specific strains analyses. steps can repeated different insecticides, either one one loop (e.g. “” loop function).","code":"head(test) #>   insecticide strain dose total dead #> 1  bendiocarb Kisumu 0.00    25    0 #> 2  bendiocarb Kisumu 0.00    25    0 #> 3  bendiocarb Kisumu 0.00    25    0 #> 4  bendiocarb Kisumu 0.00    25    0 #> 5  bendiocarb Kisumu 0.01    25    0 #> 6  bendiocarb Kisumu 0.01    25    0 unique(test$insecticide) #> [1] \"bendiocarb\"         \"chlorpyrifos-metyl\" \"permethrin\" bend<-test[test$insecticide==\"bendiocarb\",] head(bend) #>   insecticide strain dose total dead #> 1  bendiocarb Kisumu 0.00    25    0 #> 2  bendiocarb Kisumu 0.00    25    0 #> 3  bendiocarb Kisumu 0.00    25    0 #> 4  bendiocarb Kisumu 0.00    25    0 #> 5  bendiocarb Kisumu 0.01    25    0 #> 6  bendiocarb Kisumu 0.01    25    0 dataT.b<-probit.trans(bend) data.b<-dataT.b$tr.data  RR.b<-resist.ratio(data.b,plot = T,ref.strain = \"Kisumu\",plot.conf = T, test.validity = T) head(RR.b) #>         Slope SlopeSE Intercept InterceptSE    h      g  Chi2 df Chi(p)    LD25 #> Acerkis  5.88  0.3656  -10.2992      0.6734 1.00 0.0149 11.00 31 0.9997 43.0000 #> AgRR5    8.52  0.6962  -16.1686      1.3600 1.61 0.0279 18.00 31 0.9716 66.0000 #> Kisumu   7.69  0.6055    4.3400      0.3282 1.00 0.0238  7.34 39 1.0000  0.2228 #>         LD25min LD25max    LD50 LD50min  LD50max     LD95 LD95min  LD95max rr25 #> Acerkis 18.0000 132.000 57.0000  23.000 178.0000 108.0000 41.0000 371.0000  195 #> AgRR5   19.0000 376.000 79.0000  22.000 468.0000 123.0000 33.0000 798.0000  296 #> Kisumu   0.1355   0.321  0.2726   0.172   0.3824   0.4461  0.3077   0.5862    1 #>          rr25min rr25max rr50  rr50min rr50max rr95 rr95min rr95max #> Acerkis  86.0000  442.00  207 103.0000   418.0  241 43.0000    1360 #> AgRR5   131.0000  666.00  290 144.0000   583.0  277 49.0000    1560 #> Kisumu    0.3352    2.98    1   0.3849     2.6    1  0.0884      11 #To then test the difference in dose-mortality response between the strains t.models<-model.signif(data.b) #> Analysis of Deviance Table #>  #> Model 1: mortality ~ log10(data$dose) #> Model 2: mortality ~ log10(data$dose) * data$strain #>   Resid. Df Resid. Dev Df Deviance  Pr(>Chi)     #> 1       102     1981.5                           #> 2        98      107.8  4   1873.7 < 2.2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #> complete model is significant against a NULL model  #>  continueing to pair-wise comparison #> Output details #>   model.pval - significance value of ANOVA on the binomial GLM test of the strain pair #>   bonferroni - significance of the model.pval with bonferroni correction #>   res.Dv - residual deviance #>   thr - threshold for the significance of the pvalue #>   str - values for the strains #>   int - values for the interaction between the strain and the dose #>  t.models #> $model #>   strain1 strain2 model.pval bonferroni res.Dv.Null res.Dv.str res.Dv.int #> 1 Acerkis   AgRR5          0        sig     1437.16     94.149     76.989 #> 2 Acerkis  Kisumu          0        sig     1824.23     66.860     59.425 #> 3   AgRR5  Kisumu          0        sig     1822.46     80.266     79.193 #>   str.pval str.thr int.pval int.thr #> 1        0 0.00833    0.000 0.01667 #> 2        0 0.01000    0.145 0.02500 #> 3        0 0.01250    0.594 0.05000"},{"path":"https://milesilab.github.io/BioRssay/index.html/articles/BioRssay.html","id":"example-3","dir":"Articles","previous_headings":"","what":"Example 3","title":"BioRssay","text":"","code":"file <- paste0(path.package(\"BioRssay\"), \"/Example3.txt\") #import the example file from the package exm3<-read.table(file,header=TRUE) trnd<-probit.trans(exm3) #probit transformation and correction of data resist.ratio(trnd$tr.data,LD.value = c(50,95),plot = T) #get LD and RR values with the mortality plot #>      Slope SlopeSE Intercept InterceptSE    h      g Chi2 df Chi(p)   LD50 #> DZOU  1.64  0.1857      3.77      0.4515 7.94 0.0579   61 17  0.000 0.0050 #> KIS   3.46  0.2648      9.64      0.7206 3.09 0.0279   14 13  0.358 0.0016 #>      LD50min LD50max   LD95 LD95min LD95max rr50 rr50min rr50max rr95 rr95min #> DZOU   2e-04  0.0408 0.0504  0.0034  0.2650 3.07  2.7700    3.40   10  7.6200 #> KIS    1e-04  0.0099 0.0048  0.0005  0.0254 1.00  0.8991    1.11    1  0.8157 #>      rr95max #> DZOU   14.00 #> KIS     1.23 model.signif(trnd$tr.data) # test the models significance for each strain #> Output details #>   model.pval - significance value of ANOVA on the binomial GLM test of the strain pair #>   bonferroni - significance of the model.pval with bonferroni correction #>   res.Dv - residual deviance #>   thr - threshold for the significance of the pvalue #>   str - values for the strains #>   int - values for the interaction between the strain and the dose #>  #> $model #> $model$pairT #> Analysis of Deviance Table #>  #> Model 1: mortality ~ log10(data$dose) #> Model 2: mortality ~ log10(data$dose) * data$strain #>   Resid. Df Resid. Dev Df Deviance  Pr(>Chi)     #> 1        30     703.60                           #> 2        28     164.17  2   539.43 < 2.2e-16 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> $model$fullM #>                              Df  Deviance Resid. Df Resid. Dev         F #> NULL                         NA        NA        31  1839.6531        NA #> log10(data$dose)              1 1136.0509        30   703.6021 225.62945 #> data$strain                   1  404.0593        29   299.5428  80.24964 #> log10(data$dose):data$strain  1  135.3709        28   164.1719  26.88581 #>                                    Pr(>F) #> NULL                                   NA #> log10(data$dose)             6.302655e-15 #> data$strain                  1.029903e-09 #> log10(data$dose):data$strain 1.671886e-05"},{"path":"https://milesilab.github.io/BioRssay/index.html/articles/BioRssay.html","id":"references","dir":"Articles","previous_headings":"","what":"3. REFERENCES","title":"BioRssay","text":"Finney DJ(1971). Probitanalysis. Cambridge:Cambridge UniversityPress. 350p. HommelG(1988). stage wise rejective multiple test procedure based modified Bonferroni test. Biometrika 75, 383-6. Johnson RM, Dahlgren L, Siegfried BD,EllisMD(2013). Acaricide,fungicide druginteractions honeybees (Apis mellifera). PLoSONE8(1): e54092. Robertson, J. L., H.K. Preisler.1992. Pesticide bioassays arthropods. CRC, Boca Raton, FL.","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Piyal Karunarathne. Author, maintainer. Pascal Milesi. Author. Pierrick Labbé. Author.","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Karunarathne, Piyal, Pocquet, Nicolas, Labb'e, Pierrick, Milesi, Pascal (2022). “BioRssay: R package analyses bioassays probit graphs.” Parasites & Vectors, 15(1), 1-6. https://doi.org/10.1186/s13071-021-05146-x.","code":"@Article{,   title = {BioRssay: an R package for analyses of bioassays and probit graphs},   author = {{Karunarathne} and {Piyal} and {Pocquet} and {Nicolas} and {Labb{'e}} and {Pierrick} and {Milesi} and {Pascal}},   journal = {Parasites & Vectors},   year = {2022},   volume = {15},   number = {1},   pages = {1-6},   url = {https://doi.org/10.1186/s13071-021-05146-x}, }"},{"path":"https://milesilab.github.io/BioRssay/index.html/paper.html","id":null,"dir":"","previous_headings":"","what":"Summary","title":"Summary","text":"Dose-response relationships (also known exposure-response relationships) reflect effects substance (time xenobiotic chemical) organisms (populations, tissues, cells). Dose-response analyses widely used broad research areas, medicine physiology vector control pest management agronomy. , reporting response organisms stressors essential component many public policies (e.g., health, environment). ideal example monitoring resistance xenobiotics. Since 1950s, xenobiotics (e.g., insecti-, pesti-, fungicides) widely used control populations vectors pests. response, resistance mechanisms selected targeted populations, undermining efficiency. Establishing comparing resistance levels various populations various xenobiotics core world health organization () recommendations order define/adjust vector control strategies. usually done exposing batches individuals (adults larvae) varying doses xenobiotic assess responses (mortality knock-effect). Despite availability statistical approaches analyses, lack easily accessible analytical infrastructure (traditionally-used software Probit ran Basic several labs kept old computer ). 2013, developed R script robust statistical background ease dose-mortality relationship analyses. used many studies (e.g., @alout2016; @pocquet2014; @badolo2019; @assogba2016; @yameogo2021; @epelboin2021; @perrier2021), now recommended good practice ANSES (French national agency health environment safety). order make even user-friendly, now developed R package called ‘BioRssay’ flexibility improved presentation results.","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/paper.html","id":"statement-of-need","dir":"","previous_headings":"","what":"Statement of need","title":"Summary","text":"‘BioRssay’ comprehensive compilation scripts R language[@core2020] designed analyze dose-response relationships (exposure-response: mortality, knock-effect, etc.) bioassays one strains, lines, populations (also, cells, etc.). package provides complete analytic workflow data quality assessment statistical analyses data visualization. first steps, base-mortality controls (.e., mortality linked experiment , exposure) taken account adjusting data following Abbott’s correction [@abbott1925]. Data analyzed using generalized linear model (probit-link function) generate mortality-dose regressions (take -dispersion account allow mortality 0 1). Linearity log-dose response population tested using chi-square test model predictions observed data (significant deviations linearity may reflect mixed populations example). default, doses lethal 25%, 50%, 95% populations (LD25, LD50, LD95 respectively) computed 95% confidence intervals (CI), following @johnson2013 approach, allows taking heterogeneity data account [@finney1971]. Otherwise, user option specify LD level. Likelihood ratio tests (LRT) implemented test statistical significance differences response different populations/strains, necessary, Holm-Bonferroni method [@holm1979] performed control family-wise error inherent multiple testing. Finally, resistance ratios required LD(s) (RR25, RR50, RR95, default), .e., LD(s) given population divided LD(s) population lowest one (usually susceptible reference), calculated according @robertson1992, 95% confidence intervals. Customizable plots probit-transformed regressions also drawn (e.g., without desired confidence intervals).","code":""},{"path":[]},{"path":"https://milesilab.github.io/BioRssay/index.html/paper.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Summary","text":"thank Jérôme Chopard, Haoues Alout, Mylène Weill Nicole Pasteur valuable comments earlier versions script outputs.","code":""},{"path":[]},{"path":"https://milesilab.github.io/BioRssay/index.html/reference/bioassay.html","id":null,"dir":"Reference","previous_headings":"","what":"Example bioassay data set — bioassay","title":"Example bioassay data set — bioassay","text":"Example bioassay data set","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/reference/bioassay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example bioassay data set — bioassay","text":"","code":"data(bioassay)"},{"path":"https://milesilab.github.io/BioRssay/index.html/reference/bioassay.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example bioassay data set — bioassay","text":"object class list length 2.","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/reference/bioassay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example bioassay data set — bioassay","text":"","code":"data(bioassay) head(bioassay$assay1) #>   insecticide strain  dose total dead replicate     date #> 1    temephos    KIS 0.000   100   10         1 26/01/11 #> 2    temephos    KIS 0.002    97   47         1 26/01/11 #> 3    temephos    KIS 0.003    96   68         1 26/01/11 #> 4    temephos    KIS 0.004    98   89         1 26/01/11 #> 5    temephos    KIS 0.005    95   90         1 26/01/11 #> 6    temephos    KIS 0.007    99   97         1 26/01/11"},{"path":"https://milesilab.github.io/BioRssay/index.html/reference/model.signif.html","id":null,"dir":"Reference","previous_headings":"","what":"Test the significance of dose-mortality response differences — model.signif","title":"Test the significance of dose-mortality response differences — model.signif","text":"function used comparing least two strains. tests whether  mortality-dose regressions similar different strains, using  likelihood ratio test (LRT). two strains, also  computes pairwise tests, using sequential Bonferroni correction  (Hommel, 1988) account multiple testing.","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/reference/model.signif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test the significance of dose-mortality response differences — model.signif","text":"","code":"model.signif(data)"},{"path":"https://milesilab.github.io/BioRssay/index.html/reference/model.signif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test the significance of dose-mortality response differences — model.signif","text":"data data frame probit transformed mortality data using function probit.trans","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/reference/model.signif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test the significance of dose-mortality response differences — model.signif","text":"list model outputs: chi-square test two strains two strains, first overall model assessment (.e. one strain vs. ) given overall model significant,  bonferroni test significance pariwise model comparison.","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/reference/model.signif.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test the significance of dose-mortality response differences — model.signif","text":"global LRT test assesses strain’s effect, comparing two models, one one without effect (.e. comparing model several strains model data originate single strain). two strains, pairwise tests computed, p-values significance assessed using sequential Bonferroni correction  (Hommel, 1988) account multiple testing. Warning: strongly encourage users use function dose-mortality response least one strain significantly deviates linearity (see resist.ratio() function details): cases test interpreted.","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/reference/model.signif.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test the significance of dose-mortality response differences — model.signif","text":"Pascal Milesi, Piyal Karunarathne, Pierrick Labbé","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/reference/model.signif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test the significance of dose-mortality response differences — model.signif","text":"","code":"data(bioassay) transd<-probit.trans(bioassay$assay2) data<-transd$tr.data model.signif(data) #> Analysis of Deviance Table #>  #> Model 1: mortality ~ log10(data$dose) #> Model 2: mortality ~ log10(data$dose) * data$strain #>   Resid. Df Resid. Dev Df Deviance  Pr(>Chi)     #> 1        32     936.46                           #> 2        28      70.69  4   865.77 < 2.2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #> complete model is significant against a NULL model  #>  continueing to pair-wise comparison #> Output details #>   model.pval - significance value of ANOVA on the binomial GLM test of the strain pair #>   bonferroni - significance of the model.pval with bonferroni correction #>   res.Dv - residual deviance #>   thr - threshold for the significance of the pvalue #>   str - values for the strains #>   int - values for the interaction between the strain and the dose #>            #> $model #>   strain1 strain2 model.pval bonferroni res.Dv.Null res.Dv.str res.Dv.int #> 1    DZOU   DZOU2    0.26402    non-sig          NA         NA         NA #> 2    DZOU KIS-ref          0        sig     1150.41     87.892     49.747 #> 3   DZOU2 KIS-ref          0        sig     1064.79     95.043     53.537 #>   str.pval str.thr int.pval int.thr #> 1       NA      NA       NA      NA #> 2        0 0.01250    0.001   0.025 #> 3        0 0.01667    0.001   0.050 #>"},{"path":"https://milesilab.github.io/BioRssay/index.html/reference/mort.plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot dose-mortality response for each strain — mort.plot","title":"Plot dose-mortality response for each strain — mort.plot","text":"function plots probit-transformed mortalities (probit.trans()  function) function log10 dose, regressions predicted   resist.ratio() function,  without confidence levels,    dose-mortality responses linear (option).","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/reference/mort.plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot dose-mortality response for each strain — mort.plot","text":"","code":"mort.plot(   data,   strains = NULL,   plot.conf = TRUE,   conf.level = 0.95,   LD.value = c(25, 50, 95),   test.validity = TRUE,   legend.par = c(\"bottomleft\"),   ... )"},{"path":"https://milesilab.github.io/BioRssay/index.html/reference/mort.plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot dose-mortality response for each strain — mort.plot","text":"data data frame probit transformed mortality data using function probit.trans() strains character. list test strains plotted. provided, function plot strains data set. plot.conf logical. Whether plot confidence intervals strain, default TRUE conf.level numerical. confidence interval plotted LD.value numerical. Level lethal dose tested. default=c(25,50,95) test.validity logical. TRUE (default), strain mortality-dose response fails chi-square test linearity resist.ratio() function, regression plotted, observed data. legend.par multi-type. Arguments passed legend legend. default position bottomleft. legend desired use FALSE. Note: pch, lty, col passed plot, need passed legend() ... parameters passed graphics plot (e.g. col, pch)","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/reference/mort.plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot dose-mortality response for each strain — mort.plot","text":"plot dose-mortality responses bioassays","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/reference/mort.plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot dose-mortality response for each strain — mort.plot","text":"Piyal Karunarathne, Pascal Milesi, Pierrick Labbé","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/reference/mort.plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot dose-mortality response for each strain — mort.plot","text":"","code":"data(bioassay) transd<-probit.trans(bioassay$assay2) data<-transd$tr.data strains<-levels(data$strain) mort.plot(data,strains)"},{"path":"https://milesilab.github.io/BioRssay/index.html/reference/probit.trans.html","id":null,"dir":"Reference","previous_headings":"","what":"Probit-transform the data and apply Abbott's correction — probit.trans","title":"Probit-transform the data and apply Abbott's correction — probit.trans","text":"function applies probit transformation data, applying Abbott's correction (see reference) control groups (e.g. unexposed susceptible strain) show non-negligible mortality.","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/reference/probit.trans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probit-transform the data and apply Abbott's correction — probit.trans","text":"","code":"probit.trans(dataf, conf = 0.05)"},{"path":"https://milesilab.github.io/BioRssay/index.html/reference/probit.trans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probit-transform the data and apply Abbott's correction — probit.trans","text":"dataf data frame mortality data containing four mandatory columns \"strain\", \"dose\", \"total\", \"dead\" (necessarily order). conf numerical. Threshold mortality controls correction applied (default=0.05)","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/reference/probit.trans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probit-transform the data and apply Abbott's correction — probit.trans","text":"Returns list. convrg: correction values convergence (NULL mortality controls conf.), tr.data: transformed data","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/reference/probit.trans.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Probit-transform the data and apply Abbott's correction — probit.trans","text":"Abbott, WS (1925). method computing effectiveness insecticide. J. Econ. Entomol.;18:265‐267.","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/reference/probit.trans.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Probit-transform the data and apply Abbott's correction — probit.trans","text":"Pascal Milesi, Piyal Karunarathne, Pierrick Labbé","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/reference/probit.trans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probit-transform the data and apply Abbott's correction — probit.trans","text":"","code":"data(bioassay) transd<-probit.trans(bioassay)"},{"path":"https://milesilab.github.io/BioRssay/index.html/reference/resist.ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate lethal dosage, resistance ratios, and regression coefficients\n and tests for linearity — resist.ratio","title":"Calculate lethal dosage, resistance ratios, and regression coefficients\n and tests for linearity — resist.ratio","text":"Using generalised linear model (GLM, logit link function), function computes lethal doses 25 population (LD25, LD50 LD95, resp.), confidence intervals (LDmax LDmin, 0.95 default). See details info.","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/reference/resist.ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate lethal dosage, resistance ratios, and regression coefficients\n and tests for linearity — resist.ratio","text":"","code":"resist.ratio(   data,   conf.level = 0.95,   LD.value = c(25, 50, 95),   ref.strain = NULL,   plot = FALSE,   plot.conf = TRUE,   test.validity = TRUE,   legend.par = c(\"bottomright\"),   ... )"},{"path":"https://milesilab.github.io/BioRssay/index.html/reference/resist.ratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate lethal dosage, resistance ratios, and regression coefficients\n and tests for linearity — resist.ratio","text":"data data frame probit-transformed mortality data using function probit.trans() conf.level numerical. level confidence intervals applied models (default 0.95) LD.value numerical. Level lethal dose tested. default=c(25,50,95) ref.strain character. name reference strain present (see details) plot logical. Whether draw plot. Default FALSE plot.conf logical. plot=TRUE, whether plot 95 percent confidence intervals. Default TRUE test.validity logical. plot=TRUE (default), regression strain failed linearity test plotted legend.par arguments passed legend() mort.plot() ... parameters passed graphics plot (e.g. col, pch)","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/reference/resist.ratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate lethal dosage, resistance ratios, and regression coefficients\n and tests for linearity — resist.ratio","text":"Returns data frame various estimates mentioned .  plot=TRUE, plots mortality probit-transformed scale  log_10 doses.","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/reference/resist.ratio.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate lethal dosage, resistance ratios, and regression coefficients\n and tests for linearity — resist.ratio","text":"name provided ref.strain=, used reference compute resistance ratios (RR). Alternatively, function look strain suffix \"-ref\" dataset. returns NULL, strain lowest LD50 considered reference. addition LD values, function nutshell uses script modified Johnson et al (2013), allows taking g factor account (\"almost good sets data, g substantially smaller 1.0 seldom greater 0.4.\" Finney, 1971) heterogeneity (h) data (Finney, 1971) calculate confidence intervals (.e. larger heterogeneity increase confidence intervals). also computes corresponding resistance ratios (RR), .e. ratios given strain strain lower LD50 LD95, respectively  RR50 RR95 (usually, susceptible reference strain),  95  Robertson Preisler (1992). Finally, also computes coefficients   (slope intercept, standard error) linear   regressions) tests linearity dose-mortality response   using chi-square test (Chi(p)) observed dead numbers (data)   dead numbers predicted regression (test significant   data linear, e.g. mixed populations).","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/reference/resist.ratio.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate lethal dosage, resistance ratios, and regression coefficients\n and tests for linearity — resist.ratio","text":"Finney DJ (1971). Probitanalysis. Cambridge:Cambridge UniversityPress. 350p. Hommel G (1988). stage wise rejective multiple test procedure based modified Bonferroni test. Biometrika 75, 383-6. Johnson RM, Dahlgren L, Siegfried BD, Ellis MD (2013). Acaricide,fungicide druginteractions honeybees (Apis mellifera). PLoSONE8(1): e54092. Robertson, J. L., H.K. Preisler.1992. Pesticide bioassays arthropods. CRC, Boca Raton, FL.","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/reference/resist.ratio.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate lethal dosage, resistance ratios, and regression coefficients\n and tests for linearity — resist.ratio","text":"Pascal Milesi, Piyal Karunarathne, Pierrick Labbé","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/reference/resist.ratio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate lethal dosage, resistance ratios, and regression coefficients\n and tests for linearity — resist.ratio","text":"","code":"data(bioassay) transd<-probit.trans(bioassay$assay2) data<-transd$tr.data resist.ratio(data,plot=TRUE)  #>         Slope SlopeSE Intercept InterceptSE    h      g Chi2 df Chi(p)   LD25 #> DZOU     1.75  0.1537      3.72      0.3579 1.91 0.0397 9.88 10 0.4514 0.0030 #> DZOU2    1.69  0.1657      3.74      0.3907 2.33 0.0490 9.92 10 0.4473 0.0025 #> KIS-ref  3.17  0.3812      8.95      0.9849 3.26 0.0716 8.59 11 0.6597 0.0009 #>         LD25min LD25max   LD50 LD50min LD50max   LD95 LD95min LD95max rr25 #> DZOU      2e-04  0.0192 0.0074   6e-04  0.0404 0.0645  0.0087  0.2472 3.24 #> DZOU2     1e-04  0.0194 0.0062   3e-04  0.0412 0.0576  0.0055  0.2578 2.64 #> KIS-ref   0e+00  0.0142 0.0015   0e+00  0.0209 0.0050  0.0001  0.0537 1.00 #>         rr25min rr25max rr50 rr50min rr50max rr95 rr95min rr95max #> DZOU     2.7000    3.91 4.84  4.1600    5.64   13  7.6800   22.00 #> DZOU2    2.1900    3.18 4.05  3.5000    4.69   11  7.1100   19.00 #> KIS-ref  0.7947    1.26 1.00  0.8488    1.18    1  0.8085    1.24"},{"path":"https://milesilab.github.io/BioRssay/index.html/news/index.html","id":"biorssay-100","dir":"Changelog","previous_headings":"","what":"BioRssay 1.0.0","title":"BioRssay 1.0.0","text":"CRAN release: 2022-05-26","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/news/index.html","id":"biorssay-100-release-date-23052022","dir":"Changelog","previous_headings":"","what":"BioRssay 1.0.0 (Release date: 23/05/2022)","title":"BioRssay 1.0.0 (Release date: 23/05/2022)","text":"CRAN release: 2022-05-26","code":""},{"path":"https://milesilab.github.io/BioRssay/index.html/news/index.html","id":"changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"BioRssay 1.0.0 (Release date: 23/05/2022)","text":"major functions completed bugs fixed Website updated first release package CRAN (hosted also GitHub)","code":""}]
